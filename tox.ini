[tox]
envlist = py3,
          py37
          py36,
          py38,
          py39
skip_missing_interpreters = true
isolated_build = true
minversion = 3.7
distshare= {toxinidir}/dist/tox

[testenv]
changedir = .
passenv = *
setenv =
    PYTHONPATH = {toxinidir}{:}{toxinidir}/test
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    PIP_EXTRA_INDEX_URL={env:FACET_PATH_URI}/pytools/dist/tox/simple {env:FACET_PATH_URI}/sklearndf/dist/tox/simple

deps =
    gamma-pytools {env:FACET_V_GAMMA_PYTOOLS}
    pip >= 20
    sklearndf {env:FACET_V_SKLEARNDF}

extras =
    testing

commands =
    pytest test/ -s

[testenv:{py3,py36,py37,py38,py39}-custom-deps]
deps =
    boruta{env:FACET_V_BORUTA}
    gamma-pytools{env:FACET_V_GAMMA_PYTOOLS}
    joblib{env:FACET_V_JOBLIB}
    lightgbm{env:FACET_V_LIGHTGBM}
    matplotlib{env:FACET_V_MATPLOTLIB}
    numpy{env:FACET_V_NUMPY}
    pandas{env:FACET_V_PANDAS}
    pip >= 20
    scikit-learn{env:FACET_V_SCIKIT_LEARN}
    scipy{env:FACET_V_SCIPY}
    shap{env:FACET_V_SHAP}
    sklearndf{env:FACET_V_SKLEARNDF}
    typing_inspect{env:FACET_V_TYPING_INSPECT}

[flake8]

max-line-length = 88

show-source = true

ignore =
    W504,  # line break after binary operator
    E402,  # module level import not at top of file
    E731,  # do not assign a lambda expression, use a def
    E741,  # ignore not easy to read variables like i l I etc
    C408,  # Unnecessary (dict/list/tuple) call - rewrite as a literal
    S001,  # found modulo formatter (incorrect picks up mod operations)

    # Ignores below are added to prevent conflicts with Black formatter
    E231,  # Missing whitespace after ',', ';', or ':'
    E203,  # space before :
    W503,  # line break before binary operator

per-file-ignores =
    __init__.py: F401, F403, F405

exclude =
    .eggs/*.py,
    venv/*,
    .venv/*,
    .git/*

[coverage:report]
ignore_errors = False
show_missing = True

[isort]
profile=black
src_paths=src,test
known_local_folder=facet,test
known_first_party=pytools,sklearndf
known_third_party=numpy,pandas,joblib,sklearn,matplot

[pytest]
adopts =
    --cov-report=html:coverage_html
    --cov-report=xml:coverage.xml
    --cov-config=setup.cfg
    --cov-report=term-missing:skip-covered
    --no-cov-on-fail
testpaths= test/test/
log_cli_level=ERROR
cache_dir=.pytest_cache